    1  sudo usermod -h
    2  ll
    3  sudo nano /etc/hostname 
    4  hostname
    5  hostnamectl
    6  sudo apt-get update -y
    7  sudo apt-get upgrade -y
    8  sudo apt-get update -y
    9  sudo apt-get upgrade -y
   10  sudo apt-get autoremove -y
   11  ll
   12  lsd -lqa
   13  lsd -la
   14  sudo apt-get -y update && sudo apt -y update && sudo apt -y upgrade
   15  python -v
   16  python -V
   17  python3 -V
   18  echo "Instalando prerequisitos: Nerdfonts, lsd, git, curl"
   19  sudo apt install curl, git
   20  sudo apt install curl git
   21  echo "Descargar 'SourceCodePro (Sauce Code Pro Nerd Fonts)' de https://www.nerdfonts.com/font-downloads"
   22  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/SourceCodePro.zip -P ~/Downloads
   23  echo "Descargar 'Hack Nerd Font' de https://www.nerdfonts.com/font-downloads"
   24  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip -P ~/Downloads
   25  echo "Descomprimiendo las fuentes en el folder ~/.fonts"
   26  unzip ~/Downloads/SourceCodePro.zip -d ~/.fonts
   27  unzip ~/Downloads/Hack.zip -d ~/.fonts
   28  ll ~/.fonts/
   29  rm ~/.fonts/*
   30  ll ~/.fonts/
   31  rm ~/Downloads/*
   32  ll ~/Downloads/
   33  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/SourceCodePro.zip -P ~/Downloads
   34  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/RobotoMono.zip -P ~/Downloads
   35  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/JetBrainsMono.zip -P ~/Downloads
   36  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/Hack.zip -P ~/Downloads
   37  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/Ubuntu.zip -P ~/Downloads
   38  ll ~/Downloads/
   39  unzip ~/Downloads/Hack.zip -d ~/.fonts/Hack/
   40  unzip ~/Downloads/JetBrainsMono.zip -d ~/.fonts/JetBrainsMono/
   41  ll ~/Downloads/
   42  unzip ~/Downloads/RobotoMono.zip -d ~/.fonts/Roboto/
   43  unzip ~/Downloads/SourceCodePro.zip -d ~/.fonts/Roboto/SourceCodePro/
   44  unzip ~/Downloads/Ubuntu.zip -d ~/.fonts/Ubuntu/
   45  ll ~/.fonts/
   46  echo "Actualizando fuentes"
   47  fc-cache -fv
   48  fc-cache -l
   49  fc-cache list
   50  echo "Instalando fuentes... Done!"
   51  echo "Instalando 'lsd' de https://github.com/Peltoche/lsd/releases/download/0.23.1/lsd_0.23.1_amd64.deb"
   52  wget https://github.com/Peltoche/lsd/releases/download/0.23.1/lsd_0.23.1_amd64.deb -P ~/Downloads/
   53  sudo dpkg -i ~/Downloads/lsd_0.23.1_amd64.deb 
   54  echo "Instalando 'lsd'... Done!"
   55  echo "Testing 'lsd'..."
   56  lsd -la
   57  echo "Testing 'lsd'... Done!"
   58  echo "Customizing terminal colors (manual)"
   59  echo "Customizing terminal colors (manual)... Nord and Nord (Black BG) Themes... Done!"
   60  echo "Configurando git"
   61  git config --global -e
   62  echo "Configurando git... Done"
   63  echo "Customizing 'lsd' from my dot files..."
   64  wget https://github.com/rivascf/tsrvm-dotfiles/blob/main/config/lsd/config.yaml -P ~/.config/lsd/
   65  touch ~/.config/lsd/config.yaml
   66  mkdir ~/.config/lsd/
   67  touch ~/.config/lsd/config.yaml
   68  nano ~/.config/lsd/config.yaml
   69  mkdir ~/.config/lsd/themes/
   70  touch ~/.config/lsd/themes/default-theme.yaml
   71  nano ~/.config/lsd/themes/default-theme.yaml 
   72  touch ~/.config/lsd/themes/frivas-theme.yaml
   73  nano ~/.config/lsd/themes/frivas-theme.yaml 
   74  touch ~/.config/lsd/themes/terminal-colors.yaml
   75  nano ~/.config/lsd/themes/terminal-colors.yaml
   76  echo "Testing custom 'lsd' theme..."
   77  lsd -la
   78  echo "Testing custom 'lsd' theme... Done!"
   79  echo "Customizing 'lsd' from my dot files... Done!"
   80  echo "Configuring 'lsd'... "
   81  nano .bash_r
   82  nano .bashrc 
   83  source .bashrc 
   84  ll
   85  l
   86  la
   87  ls
   88  lt ~/Downloads/
   89  lt ~/.config/lsd/
   90  echo "Configuring 'lsd'... Testing... Done!"
   91  echo "Installing Nvim (Neovim)... Methode 1 from deb packages."
   92  vim
   93  wget https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.deb -P ~/Downloads/
   94  cd ~/Downloads/
   95  sudo apt install ./nvim-linux64.deb 
   96  nvim
   97  sudo apt-get install software-properties-common python-software-properties
   98  sudo apt-get install python-dev python-pip python3-dev python3-pip
   99  sudo apt-get install python-dev python3-dev python3-pip
  100  cd ..
  101  pip3 -V
  102  pip3 list pynvim
  103  pip3 install pynvim
  104  nvim
  105  pip3 install pip --upgrade
  106  nvim .bashrc 
  107  nvim .profile 
  108  echo $PATH
  109  pip3 install pip --upgrade
  110  nvim .bashrc 
  111  nvim .profile 
  112  nvim .bashrc 
  113  pip3 install pip --upgrade
  114  source .bashrc
  115  pip3 install pip --upgrade
  116  echo "PIP3 PATH warning, solved!"
  117  echo "Installing Nvim (Neovim)... Methode 1 from deb packages... Step 1. Basic config... Done!"
  118  echo "Instalando pyenv"
  119  sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl
  120  git clone https://github.com/pyenv/pyenv.git ~/.pyenv
  121  echo "Configurando pyenv en .bashrc"
  122  vim .bashrc 
  123  nvim .bashrc 
  124  source .bashrc
  125  echo "Probando pyenv e instalando otras versiones de Python"
  126  python -V
  127  python3 -V
  128  pyenv install -l
  129  pyenv versions
  130  pyenv install 3.10.9
  131  pyenv install 3.11.1
  132  pyenv install 2.7.18
  133  pyenv versions
  134  mkdir -p ~/Projects/Python/testpy
  135  cd ~/Projects/Python/testpy
  136  pyenv local 3.11.1
  137  python -V
  138  ll
  139  python3 -V
  140  pyenv versions
  141  python -V
  142  python --version
  143  python -m venv .venv
  144  nvim ~/.bashrc 
  145  source ~/.bashrc 
  146  pyenv versions
  147  python3.11 
  148  python3.11 -m venv .venv
  149  ll
  150  rm .python-version 
  151  python --version
  152  pyenv versions
  153  source .venv/bin/activate
  154  python -V
  155  deactivate
  156  python -V
  157  source .venv/bin/activate
  158  pip -V
  159  deactivate
  160  pip -V
  161  cd ..
  162  ll
  163  rm -rf testpy/
  164  ll
  165  cd
  166  echo "Probando pyenv e instalando otras versiones de Python... Done!"
  167  gcc -V
  168  gcc -version
  169  gcc --version
  170  c++
  171  c++ --version
  172  make -V
  173  make -v
  174  echo "Adding aliases."
  175  touch .bash_aliases
  176  nvim .bash_aliases 
  177  source .bash_rc
  178  source .bashrc 
  179  reset-term 
  180  echo "Adding aliases... Done!"
  181  source ~/.bash_completion/alacritty
  182  vim ~/.bash_completion/alacritty
  183  shopt -oq posix
  184  vim ~/.config/alacritty/alacritty.yml 
  185  npm
  186  nodejs
  187  g
  188  cd ~/Downloads/
  189  git clone https://github.com/rivascf/tsrvm-v2-dotfiles.git
  190  cd
  191  rustup
  192  echo "Instalando Alacritty..."
  193  echo "Instalando Alacritty... Prerequisitos... "
  194  g clone https://github.com/alacritty/alacritty.git
  195  cd alacritty/
  196  echo "Instalando Alacritty... Prerequisitos... Instalando RUST compiler (rustup)"
  197  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
  198  source "$HOME/.cargo/env"
  199  rustup override set stable
  200  rustup update stable
  201  echo "Instalando Alacritty... Prerequisitos... Instalando RUST compiler (rustup)... Done!"
  202  echo "Instalando Alacritty... Prerequisitos... Dependences..."
  203  sudo apt-get install cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev
  204  echo "Instalando Alacritty... Prerequisitos... Dependences... Done!"
  205  echo "Instalando Alacritty... Building..."
  206  cargo build --release
  207  echo "Instalando Alacritty... Post build..."
  208  infocmp alacritty
  209  sudo tic -xe alacritty,alacritty-direct extra/alacritty.info
  210  infocmp alacritty
  211  echo "Instalando Alacritty... Post build... Done!"
  212  echo "Instalando Alacritty... Desktop Entry..."
  213  sudo cp target/release/alacritty /usr/local/bin # or anywhere else in $PATH
  214  sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
  215  sudo desktop-file-install extra/linux/Alacritty.desktop
  216  sudo update-desktop-database
  217  echo "Instalando Alacritty... Desktop Entry... Done!"
  218  echo "Instalando Alacritty... Manual entry..."
  219  sudo mkdir -p /usr/local/share/man/man1
  220  gzip -c extra/alacritty.man | sudo tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null
  221  gzip -c extra/alacritty-msg.man | sudo tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null
  222  echo "Instalando Alacritty... Manual entry... Done!"
  223  cho "Instalando Alacritty... Shell completions..."
  224  echo "Instalando Alacritty... Shell completions..."
  225  cd
  226  cd alacritty/
  227  mkdir -p ~/.bash_completion
  228  cp extra/completions/alacritty.bash ~/.bash_completion/alacritty
  229  echo "source ~/.bash_completion/alacritty.bash" >> ~/.bashrc
  230  echo "Instalando Alacritty... Shell completions... Done!"
  231  echo "Instalando Alacritty... Verifying installation..."
  232  nvim ~/.bashrc
  233  nvim
  234  source "$HOME/.cargo/env"
  235  echo "source "$HOME/.cargo/env"" >> ~/.bashrc
  236  echo "Instalando Alacritty... Shell completions... Done!"
  237  echo "Instalando Alacritty... Verifying installation..."
  238  cd 
  239  vim .bashrc 
  240  mkdir -p ~/.bash_completion.d
  241  mv ~/.bash_completion/* ~/.bash_completion.d
  242  rm ~/.bash_completion
  243  rm -rf ~/.bash_completion
  244  vim ~/.bashrc
  245  mv ~/Downloads/tsrvm-v2-dotfiles/config/alacritty ~/.config/
  246  ll ~/.config/
  247  ll
  248  rustup
  249  cd ~/Projects/Python/testvenv/
  250  source .venv/bin/activate
  251  vim ~/.bash_aliases 
  252  reset-term 
  253  deactivate
  254  cd
  255  vim ~/.bashrc 
  256  reset-term 
  257  ll ~/Downloads/tsrvm-v2-dotfiles/config/
  258  mv ~/Downloads/tsrvm-v2-dotfiles/config/gitbash/ ~/.config/
  259  mv ~/Downloads/tsrvm-v2-dotfiles/config/rosmgmt/ ~/.config/
  260  mv ~/Downloads/tsrvm-v2-dotfiles/config/utilities/ ~/.config/
  261  lt ~/.config/
  262  vim ~/.bashrc 
  263  reset-term 
  264  ll
  265  cd Projects/
  266  ll
  267  cd Python/
  268  ll
  269  pyenv -l
  270  pyenv -h
  271  pyenv local 3.11.1
  272  ll
  273  python -V
  274  history | grep venv
  275  python -m venv .venv
  276  rm .python-version 
  277  python -V
  278  source .venv/bin/activate
  279  ll
  280  deactivate
  281  mkdir testvenv
  282  cd testvenv/
  283  git init
  284  pyenv local 3.11.1
  285  python -m venv .venv
  286  rm .python-version 
  287  source .venv/bin/activate
  288  touch .gitignore
  289  vim .gitignore 
  290  gst
  291  g add .
  292  g commit 
  293  vim README.md
  294  g add .
  295  gst
  296  g commit 
  297  git config --local -e
  298  vim ~/.gitconfig 
  299  g commit 
  300  gst
  301  g lg
  302  deactivate
  303  cd
  304  echo "Instalando Alacritty... Verifying installation... Done!"
  305  echo "Installing Node.js and npm using NVM (Node Version Manager)..."
  306  echo "extracted from: https://linuxize.com/post/how-to-install-node-js-on-ubuntu-22-04/#installing-nodejs-and-npm-using-nvm, https://github.com/nvm-sh/nvm#installing-and-updating"
  307  wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
  308  unzip -V
  309  unzip -v
  310  tar -v
  311  tar --version
  312  gzip -v
  313  nvm -V
  314  nvm -v
  315  nvm list-remote
  316  nvm list --lts
  317  nvm install --lts
  318  node -v
  319  nvm install v16.19.0
  320  nvm ls
  321  npm
  322  vim
  323  npm install -g neovim
  324  npm install -g npm@9.2.0
  325  vim
  326  echo "Installing Node.js and npm using NVM (Node Version Manager)... Done! (Neovim module included)."
  327  echo "Configuring neovim using LUA..."
  328  cd ~/.config/
  329  mkdir nvim
  330  cd nvim/
  331  nvim init.lua
  332  git clone --depth 1 https://github.com/wbthomason/packer.nvim ~/.local/share/nvim/site/pack/packer/start/packer.nvim
  333  mkdir lua
  334  cd lua
  335  vim plugins.lua
  336  nvim ..\init.lua
  337  nvim ..\init.lua 
  338  ..
  339  ll
  340  cd ..
  341  ..
  342  ll
  343  vim init.lua 
  344  vim .bash_aliases 
  345  cd ~/.config/nvim/
  346  lt
  347  vim lua/plugins.lua 
  348  vim lua/p-lsp.lua
  349  vim lua/plu
  350  vim lua/p-mason.lua
  351  vim init.lua 
  352  vim lua/p-lsp.lua
  353  vim init.lua 
  354  vim lua/p-lsp.lua
  355  vim lua/plugins.lua 
  356  vim lua/p-tree.lua
  357  vim init.lua 
  358  vim lua/p-tree.lua
  359  vim init.lua 
  360  vim lua/p-tree.lua
  361  vim init.lua 
  362  vim lua/plugins.lua 
  363  vim init.lua 
  364  vim lua/colors.lua
  365  vim init.lua 
  366  vim lua/colors.lua
  367  vim lua/color.lua
  368  vim init.lua 
  369  vim lua/color-nordfox.lua 
  370  vim ~/.bashrc 
  371  cd ~/Projects/Python/testvenv/
  372  ll
  373  vim README.md 
  374  vim rosnode.py
  375  git config --global -e
  376  vim lua/color-nordfox.lua 
  377  cd ~/.config/nvim/
  378  vim lua/color-nordfox.lua 
  379  vim init.lua 
  380  vim lua/color-nordfox.lua 
  381  nvim init.lua 
  382  nvim lua/base.lua 
  383  nvim lua/p-lualine.lua 
  384  nvim lua/base.lua 
  385  echo "Installing ripgrep for Telescope from BurntSushi/ripgrep..."
  386  curl -h
  387  cd ~/Downloads/
  388  curl -LO https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb
  389  sudo dpkg -i ripgrep_13.0.0_amd64.deb
  390  cd ~/.config/nvim/
  391  echo "Installing ripgrep for Telescope from BurntSushi/ripgrep... Done!"
  392  nvim lua/base.lua 
  393  cd ~/.config/nvim/
  394  cd ~/Projects/Python/testvenv/
  395  ll
  396  vim rosnode.py 
  397  cd ~/.config/nvim/
  398  nvim lua/base.lua 
  399  ll ~/Downloads/
  400  cd 
  401  ll
  402  cd ~/Downloads/
  403  ll
  404  rm *.zip
  405  rm *.deb
  406  ll
  407  cd ../Documents/
  408  ll
  409  mkdir dotfiles
  410  cd dotfiles/
  411  ll
  412  ll ~/.config/
  413  cp ~/.config/alacritty/
  414  cp --help
  415  cp ~/.config/alacritty
  416  cp -a ~/.config/alacritty/. .
  417  ll
  418  rm alacritty.yml 
  419  cp -R ~/.config/alacritty/. alacritty/
  420  ll
  421  lt alacritty/
  422  ll ~/.config/
  423  cp -R ~/.config/nvim/. nvim/
  424  ll
  425  lt nvim/
  426  cp ~/.bashrc bashrc
  427  cp ~/.bash_aliases bash_aliases
  428  ll
  429  lt
  430  history
  431  echo $VIRTUAL_ENV
  432  env
  433  env | grep VIRTUAL
  434  vim ~/.bashrc 
  435  cd ~/.config/nvim/
  436  ll
  437  rm -rf *
  438  ll
  439  cd ..
  440  cd ~/.local/share/nvim/
  441  ll
  442  cat telescope_history 
  443  rm telescope_history 
  444  ll site/
  445  cat rplugin.vim 
  446  rm -rf site/
  447  ll
  448  rm rplugin.vim 
  449  rm mason/
  450  rm -rf mason/
  451  ll
  452  cd
  453  vim
  454  echo "Configuring neovim using LUA... Partially done!"
  455  echo "Configuring neovim using LUA... Insant IDE from 'https://www.youtube.com/watch?v=stqUbv-5u2'"
  456  echo "Configuring neovim using LUA... 'Effective Neovim: Instant IDE' from <https://www.youtube.com/watch?v=stqUbv-5u2>"
  457  cd ~/.config/nvim/
  458  ll
  459  vim init.lua
  460  nvim
  461  vim init.lua
  462  npm install -g neovim
  463  npm fund
  464  echo "Configuring neovim using LUA... 'Effective Neovim: Instant IDE' from <https://www.youtube.com/watch?v=stqUbv-5u2>... Done!"
  465  echo "Installing GO and RUST (just for fun)..."
  466  history | wget
  467  history | grep wget
  468  wget https://go.dev/dl/go1.19.4.linux-amd64.tar.gz -P ~/Downloads
  469  curl -sL https://golang.org/dl/ | grep -A 5 -w "go${VERSION}.linux-${ARCH}.tar.gz"
  470  curl -sL https://golang.org/dl/ | grep -A 5 -w "go1.19.4.linux-amd64.tar.gz"
  471  echo "b3b815f47ababac13810fc6021eb73d65478e0b2db4b09d348eefad9581a2334 *go1.19.4.linux-amd64.tar.gz" | shasum -a 256 --check
  472  echo "b3b815f47ababac13810fc6021eb73d65478e0b2db4b09d348eefad9581a2334 ~/Downloads/*go1.19.4.linux-amd64.tar.gz" | shasum -a 256 --check
  473  cd ~/Downloads/
  474  echo "b3b815f47ababac13810fc6021eb73d65478e0b2db4b09d348eefad9581a2334 *go1.19.4.linux-amd64.tar.gz" | shasum -a 256 --check
  475  rm go1.19.4.linux-amd64.tar.gz 
  476  curl -O -L "https://golang.org/dl/go1.19.4.linux-amd64.tar.gz"
  477  echo "b3b815f47ababac13810fc6021eb73d65478e0b2db4b09d348eefad9581a2334 *go1.19.4.linux-amd64.tar.gz" | shasum -a 256 --check
  478  echo "BOBO! El CHECKSUM ES 'c9c08f783325c4cf840a94333159cc937f05f75d36a8b307951d5bd959cf2ab8'"
  479  echo "c9c08f783325c4cf840a94333159cc937f05f75d36a8b307951d5bd959cf2ab8 *go1.19.4.linux-amd64.tar.gz" | shasum -a 256 --check
  480  tar -xf "go${VERSION}.linux-${ARCH}.tar.gz"
  481  tar -xf go1.19.4.linux-amd64.tar.gz 
  482  ll
  483  sudo chown -R root:root ./go
  484  ll
  485  sudo mv -v go /usr/local
  486  ll
  487  vim ~/.bash_profile
  488  cd
  489  vim ~/.bash_profile
  490  vim .bashrc 
  491  reset-term 
  492  go version
  493  cd Projects/
  494  mkdir GO
  495  cd GO
  496  mkdir test
  497  cd test
  498  vim hello.go
  499  go run hello.go 
  500  go build hello.go 
  501  ll
  502  ./hello 
  503  vim
  504  echo "Installing GO and RUST (just for fun)... GO, done!"
  505  vim
  506  echo "Installing GO and RUST (just for fun)... RUST is already installedi! Durk!"
  507  cd ~/.config/nvim/
  508  vim init.lua 
  509  history | tail -10
  510  history >> ~/Documents/dotfiles/history_291222
